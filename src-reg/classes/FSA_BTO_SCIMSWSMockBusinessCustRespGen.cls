@isTest
public class FSA_BTO_SCIMSWSMockBusinessCustRespGen implements HttpCalloutMock {
    public HttpResponse respond(HttpRequest req) {
        System.assertEquals('POST', req.getMethod());

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'text/xml;charset=UTF-8');
        res.setBody('<env:Envelope xmlns:env=\'http://schemas.xmlsoap.org/soap/envelope/\' xmlns:soap11-enc=\'http://schemas.xmlsoap.org/soap/encoding/\'><env:Header></env:Header><env:Body><mes:GetCustomerResponse xmlns:mes=\'http://tempuri.org/message/\' env:encodingStyle=\'http://schemas.xmlsoap.org/soap/encoding/\'><Result>&lt;?xml version=&quot;1.0&quot; ?&gt;&lt;SCIMSCustomerList&gt;&lt;NumberOfCustomersReturned&gt;1&lt;/NumberOfCustomersReturned&gt;&lt;SCIMSCustomer&gt;&lt;CustomerData&gt;&lt;CustomerID&gt;123456&lt;/CustomerID&gt;&lt;CustomerType&gt;&lt;Code&gt;B&lt;/Code&gt;&lt;Description&gt;Business&lt;/Description&gt;&lt;/CustomerType&gt;&lt;CommonName&gt;FAKE BUSINESS NAME&lt;/CommonName&gt;&lt;IndividualName&gt;&lt;Last /&gt;&lt;First /&gt;&lt;Middle /&gt;&lt;Prefix&gt;&lt;/Prefix&gt;&lt;Suffix&gt;&lt;/Suffix&gt;&lt;/IndividualName&gt;&lt;BusinessName&gt;FAKE BUSINESS NAME ABCDEFGHIJKLMNOPQRSTUVWXYZ 01234567890123456789012345678901234&lt;/BusinessName&gt;&lt;LegalNameIndicator&gt;N&lt;/LegalNameIndicator&gt;&lt;BusinessType&gt;&lt;BusinessTypeCurrentYear&gt;&lt;Code&gt;03&lt;/Code&gt;&lt;Description&gt;Joint Venture&lt;/Description&gt;&lt;/BusinessTypeCurrentYear&gt;&lt;BusinessTypePriorYear1&gt;&lt;Code&gt;00&lt;/Code&gt;&lt;Description&gt;Joint Venture&lt;/Description&gt;&lt;/BusinessTypePriorYear1&gt;&lt;BusinessTypePriorYear2&gt;&lt;Code&gt;00&lt;/Code&gt;&lt;Description&gt;Joint Venture&lt;/Description&gt;&lt;/BusinessTypePriorYear2&gt;&lt;/BusinessType&gt;&lt;TaxID&gt;111223333&lt;/TaxID&gt;&lt;SurrogateTaxID&gt;&lt;/SurrogateTaxID&gt;&lt;TaxIDType&gt;&lt;Code&gt;S&lt;/Code&gt;&lt;Description&gt;Social Security&lt;/Description&gt;&lt;/TaxIDType&gt;&lt;TINValidationResult&gt;&lt;Code /&gt;&lt;Description /&gt;&lt;/TINValidationResult&gt;&lt;InactiveCustomer&gt;&lt;Code&gt;N&lt;/Code&gt;&lt;Description&gt;Inactive&lt;/Description&gt;&lt;/InactiveCustomer&gt;&lt;InactiveCustomerDate /&gt;&lt;DuplicateCustomer&gt;&lt;Code&gt;N&lt;/Code&gt;&lt;Description&gt;No duplicate&lt;/Description&gt;&lt;/DuplicateCustomer&gt;&lt;CustomerAttributes&gt;&lt;BirthDate&gt;01/01/1900&lt;/BirthDate&gt;&lt;BirthDateDetermination&gt;&lt;Code&gt;C&lt;/Code&gt;&lt;Description&gt;Customer Declared&lt;/Description&gt;&lt;/BirthDateDetermination&gt;&lt;DateOfDeath /&gt;&lt;DeathConfirmed /&gt;&lt;Gender&gt;&lt;Code&gt;01&lt;/Code&gt;&lt;Description&gt;Female&lt;/Description&gt;&lt;/Gender&gt;&lt;GenderDetermination&gt;&lt;Code&gt;E&lt;/Code&gt;&lt;Description&gt;Employee Observed&lt;/Description&gt;&lt;/GenderDetermination&gt;&lt;MaritalStatus&gt;&lt;Code&gt;WI&lt;/Code&gt;&lt;Description&gt;Widow(er)&lt;/Description&gt;&lt;/MaritalStatus&gt;&lt;Veteran&gt;Y&lt;/Veteran&gt;&lt;LimitedResourceProducer&gt;N&lt;/LimitedResourceProducer&gt;&lt;ResidentAlien&gt;U&lt;/ResidentAlien&gt;&lt;CitizenshipCountry&gt;&lt;Code&gt;US&lt;/Code&gt;&lt;/CitizenshipCountry&gt;&lt;OriginatingCountry&gt;&lt;Code&gt;&lt;/Code&gt;&lt;/OriginatingCountry&gt;&lt;VotingDistrict&gt;1905&lt;/VotingDistrict&gt;&lt;LanguagePreference&gt;&lt;Code&gt;EN&lt;/Code&gt;&lt;Description&gt;English&lt;/Description&gt;&lt;/LanguagePreference&gt;&lt;ReceiveMail&gt;Y&lt;/ReceiveMail&gt;&lt;ReceiveFsaMail&gt;Y&lt;/ReceiveFsaMail&gt;&lt;ReceiveNrcsMail&gt;N&lt;/ReceiveNrcsMail&gt;&lt;ReceiveRdMail&gt;N&lt;/ReceiveRdMail&gt;&lt;ReceiveElectronicMail&gt;Y&lt;/ReceiveElectronicMail&gt;&lt;EmployeeType&gt;&lt;Code&gt;00&lt;/Code&gt;&lt;Description&gt;Not an Employee&lt;/Description&gt;&lt;/EmployeeType&gt;&lt;/CustomerAttributes&gt;&lt;/CustomerData&gt;&lt;Address /&gt;&lt;Phone /&gt;&lt;Email /&gt;&lt;/SCIMSCustomer&gt;&lt;/SCIMSCustomerList&gt;</Result></mes:GetCustomerResponse></env:Body></env:Envelope>');
        res.setStatusCode(200);
        return res;
    }
}